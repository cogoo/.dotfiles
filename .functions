# Auto switch node version
load-nvmrc() {
  local node_version="$(nvm version)"
  local nvmrc_path="$(nvm_find_nvmrc)"

  if [ -n "$nvmrc_path" ]; then
    local nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")

    if [ "$nvmrc_node_version" != "N/A" ] && [ "$nvmrc_node_version" != "$node_version" ]; then
      nvm use
    fi
  elif [ "$node_version" != "$(nvm version default)" ]; then
    echo "Reverting to nvm default version"
    nvm use default
  fi
}

# Add load-nvmrc function to change directory
add-zsh-hook chpwd load-nvmrc

# List files when switching directory
chpwd() {
  clear && ls -la
}

# Helpers for Nx library
og-nx-add() {
  if [ "$#" = 3 ]; then
    echo "ðŸ“¦  Creating $1 $2"
    ng g @nrwl/$1:$2 $3
  else
    echo "ðŸš«  This command requires 3 parameters"
  fi
}

update_antibody_plugins() {
  antibody bundle < ~/.dotfiles/antibody/bundles.txt >~/.zsh_plugins.sh
  antibody update
}

mux() {
  if [ "$1" = "ls" ]; then
    echo "Use the default tmux command"
    return
  fi

  if [ "$1" = "new" ]; then
    if [ -n "$2" ]; then
      tmux new-session -s $2
      return
    else
      echo "ðŸ˜… You must specify a session name. Try my_session"
    fi
    return
  fi

  if [ "$1" = "a" ]; then
    if [ -n "$2" ]; then
      tmux a -t $2
      return
    else
      echo "ðŸ˜… specify what session to attach to. Available sessions: \n"
      tmux ls
    fi

    return
  fi

  echo "ðŸ˜… \n Available commands are ls, new, a"
}
